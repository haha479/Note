yarn是一个资源调度平台, 负责为运算程序提供服务器运算资源.


yarn的调度算法
	FIFO:先进先出, 单个队列, 同时只能服务一个作业
	容量调度器:
		多个队列, 每个队列配置一定的资源量, 队列间的资源可以暂时共享, 每个队列采用FIFO调度算法.
		队列资源分配
			从root开始, 使用深度优先算法, 有限选择资源占用率最低的队列分配资源.
		作业资源分配
			默认按照提交作业的优先级和提交时间顺序分配资源
		容器资源分配
			按照容器的优先级分配资源, 如果优先级相同, 按照数据本地性原则
			1. 任务和数据在同一节点
			2. 任务和数据在同一机架
			3. 任务和数据不在同一节点也不在同一机架

	公平调度器
		同队列所有任务共享平分资源
		与容量调度器相同点
			多队列
			容量保证
			队列间资源可共享
		与容量调度器不同点
			核心调度策略不同:公平调度器优先选择对资源的缺额比例大的(缺额是指作业已分配到的资源与实际需要的资源之差)
			每个队列可以单独设置资源分配方式
				容量调度器:FIFO、DRF
				公平调度器:FIFO、FAIR、DRF
		DRF策略:可根据不同应用对不同资源(CPU和内存)需求按比例分配

Yarn常用命令
	列出所有Application
		yarn application -list
	根据Application状态过滤并列出:
		yarn application -list -appStates [ALL, NEW, NEW_SAVING, SUBMITTED, ACCEPTED, RUNNING, FINISHED, FAILED, KILLED]
	Kill掉Application
		yarn application -kill [applicaition的id]
	查看Application日志
		yarn logs -applicationId [applicaition的id]
	查看Container日志(查看应用下的某一个容器的运行情况)
		yarn logs -applicationId [applicaition的id] -containerId [container的id]
	查看尝试运行的任务
		yarn applicationattempt -list [applicaition的id]
	查看applicationattempt当前运行状态
		yarn applicationattempt -status [applicationAttempId]
	查看当前所有的容器
		yarn container -list [applicationAttemptId]
	查看容器状态
		yarn container -status [containerId]
	查看节点状态
		yarn node -list -all
	更新配置
		yarn rmadmin -refreshQueues
	查看队列
		yarn queue -status [QueueName]

yarn生产环境核心配置参数
	1.ResourceManager相关
		yarn.resourcemanager.scheduler.class	配置调度器,默认容量
		yarn.resourcemanager.scheduler.client.thread-count	ResourceManager处理调度器请求的线程数量, 默认50
	2.NodeManager相关(针对单节点配置)
		yarn.nodeemanager.resource.detect-hardware-capabilities 是否让yarn自己检测硬件进行配置, 默认false
		yarn.nodemanager.resource.count-logical-processors-as-cores	是否将虚拟核数当作cpu核数, 默认false
		yarn.nodemanager.resource.pcores-vcores-multiplier	虚拟核数和物理核数乘数, 例如:4核8线程, 该参数应设置为2
		yarn.nodemanager.resource.memory-mb		NodeManager使用内存, 默认8G
		yarn.nodemanager.resource.cpu-vcores	NodeManager使用cpu核数, 默认8个
		yarn.nodemanager.pmem-check-enabled		是否开启物理内存检查限制container, 默认打开
		yarn.nodemanager.vmem-check-enabled		是否开启虚拟内存检查限制container, 默认打开
		yarn.nodemanager.vmem-pmem-ratio		虚拟内存物理内存比例, 默认2.1
	3.Container相关
		yarn.scheduler.minimun-allocation-mb	容器最小内存, 默认1G
		yarn.scheduler.maximum-allocation-mb	容器最大内存, 默认8G
		yarn.scheduler.minimum-allocation-vcores	容器最小cpu核数, 默认1个
		yarn.scheduler.maximum-allocation-vcores	容器最大cpu核数, 默认1个
