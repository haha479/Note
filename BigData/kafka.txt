kafka是一个分布式、支持分区的、多副本的、基于zookeeper协调的分布式消息系统
本质上是一个分布式的流数据平台, 主要用途是流数据集成

当生产者产生的数据流消费者处理不过来时, 会暂存在kafka中, kafka再以统一接口的形式发放给各种consumer, 然后consumer再处理, 其中未处理的数据流是写在磁盘上的, 这就是与redis最大的差别

kafka的特性?
	高吞吐、低延迟 :kafka每秒可以处理几十万条消息它的延迟最低只有几毫秒, 每个topic可以分多个partition, consumer group 对partition进行consumer操作
	可扩展性 :kafka集群支持热扩展
	持久性、可靠性 :消息被持久化到本地磁盘, 并且支持数据备份防止数据丢失
	容错性 :允许集群中节点失败(若副本数量为n, 则允许n-1个节点失败)
	高并发 :支持数千个客户端同时读写

kafka的使用场景?
	日志收集 :一个公司可以用kafka可以收集各种服务的log, 用过kafka以统一接口服务的方式开放给各种consumer, 例如hadoop、Hbase、Solr等

	消息系统 :解耦和生产者和消费者、缓存消息等
	用户活动跟踪 :kafka经常被用来记录web用户或者app用户的各种活动, 如浏览网页、搜索、点击等活动, 这些活动信息被各个服务器发布到kafka的topic中, 然后订阅者通过订阅这些topic来做实时的监控分析, 或者装载到hadoop、数据仓库中做离线分析和挖掘

	运营指标 :kafka也经常用来记录运营监控数据. 包括收集各种分布式应用的数据, 生产各种操作的集中反馈, 比如报警和报告


在实现pub/sub这个功能上redis和kafka的区别:
	redis :快捷, 成本低, 但可靠性较差, 消息堆积能力差, 没有group功能, 无法回放消息等

	kafka :正规的消息队列技术, 对于redis来说多了运维成本, 普遍适用于海量消息处理, 可以克服上述redis的缺点, 常用来处理日志、监控等

	
kafka安装启动配置
	修改配置文件server.properties, 如borker.id, log.dirs, zookeeper.connect
	分发安装包到集群
	集群配置环境变量(集群中所有节点)
	启动Zookeeper集群
	集群中启动Kafka
		bin/kafka-server-start.sh -daemon ./config/server.properties

	停止kafka集群时, 先停止kafka所有节点进程, 再停止Zookeeper集群

常用命令行
	主题 bin/kafka-topics.sh 参数
		--bootstrap-server <String: server toconnect to> 连接的 Kafka Broker 主机名称和端口号
		--topic <String: topic> 操作的 topic 名称
		--create 创建主题
		--delete 删除主题
		--alter 修改主题
		--list 查看所有主题
		--describe 查看主题详细描述
		--partitions <Integer: # of partitions> 设置分区数
		--replication-factor<Integer: replication factor> 设置分区副本
		--config <String: name=value> 更新系统默认的配置

	生产者 bin/kafka-console-producer.sh 
		--bootstrap-server  kafka集群, 例:hadoop102:9092,hadoop103:9092
		--topic 主题名
	
	消费者 bin/kafka-console-consumer.sh 
		--bootstrap-server  hadoop102:9092,hadoop103:9092
		--topic 主题名

生产者提高吞吐量(对比实际情况设置参数)
	1. batch.size: 批次大小, 默认为16k
	2. linger.ms: 每批次数据运输的间隔时间, 5-100ms
	3. compression.type: 压缩的类型, 支持gzip、snappy、lz4和zstd
	4. RecordAccumulator: 缓冲区大小

数据可靠性(ACK应答级别)
	acks=0: 生产者发送过来的数据, 不需要等待数据落盘应答
	acks=1: 生产者发送过来的数据, Leader接收数据后应答
	acks=-1: 生产者发送过来的数据, Leader接收数据并且同步到isr队列(包括Leader和Leader保持同步的Follower集合)里所有节点后应答

配置Kafka-Eagle
	Kafka-Eagle 框架可以监控 Kafka 集群的整体运行情况
	1.关闭kafka集群
	2.修改kafka目录下config/kafka-server-start.sh文件, 并分发至所有节点
	3.解压kafka-eagle-bin-2.0.8.tar.gz文件
	3.修改efak目录下/conf/system-config.properties文件
	4.配置efak环境变量
	5.启动zk, kafka
	6.启动efak
		bin/ke.sh start

配置kafka-Kraft
	kafka-Kraft模式不再依赖zookeeper
	1.重新解压一份kafka安装包
	2.修改目录下config/kraft/server.properties
	3.分发安装包至集群所有节点
	4.初始化集群数据目录
		1)生成存储目录唯一ID
			bin/kafka-storage.sh random-uuid
		2)用生成的ID格式化kafka存储目录(集群执行)
			bin/kafka-storage.sh format -t 生成的UUID -c 
	5.启动kafka集群(集群执行)
		bin/kafka-server-start.sh -daemon ./config/kraft/server.properties
